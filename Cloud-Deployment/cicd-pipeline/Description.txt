The experiment focuses on understanding how to automate the testing and deployment process of a React 
application using GitHub Actions. Continuous Integration and Continuous Deployment (CI/CD) ensures 
that every change pushed to the repository is automatically tested and built, providing a more reliable 
and efficient development workflow. This eliminates manual steps and helps detect issues early in the 
development process.

To achieve this, a special workflow configuration file named main.yml was created inside the .github/workflows 
directory of the project. This YAML file defines the set of automated actions that run every time a 
developer pushes code to the main branch. These actions include installing dependencies, running tests,
 and building the project, making the process consistent and repeatable.

GitHub Actions uses virtual environments called runners to execute these workflows. In this setup, 
an Ubuntu runner was used, and Node.js was installed to create a runtime suitable for building a 
React application. The workflow steps used the official GitHub Actions for checking out code, setting
up Node.js, installing dependencies using npm, running test scripts, and executing the build command 
to generate optimized production files.

After pushing the workflow file to the repository, the GitHub Actions tab displayed the live execution 
of the pipeline. Each step could be monitored to ensure successful installation, testing, and building 
of the application. If any step failed, the detailed logs helped identify and fix the problem quickly.
This visual feedback system provided by GitHub Actions makes CI/CD implementation simple and transparent.


The overall result of the experiment was an automated system that runs tests and builds the application 
with every code push. This ensures that the project remains stable, consistent, and deployment-ready
at all times. The pipeline can also be extended later to include deployment to services like GitHub 
Pages, Netlify, or AWS, completing the full CI/CD process.

