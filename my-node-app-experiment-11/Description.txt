REST API for Playing Card Collection – Description :

1 : The main objective of this code is to learn how to build RESTful APIs using Express.js. The program
demonstrates:
Routing in Express.js
Handling HTTP methods (GET, POST, DELETE)
JSON request and response handling
In-memory data management
Building a simple backend server without using a database


2: Description of the Code : Importing Express and setting up the server:

const express = require("express");
const app = express();
const PORT = 3000;



2 : Middleware for JSON parsing: app.use(express.json());
This allows the server to automatically parse incoming JSON requests.



3 : In-memory array for storing cards:
let cards = [];
let nextId = 1;
Each card object contains:

id (unique identifier)
suit (Hearts, Spades, Diamonds, Clubs)
value (Ace, 2–10, Jack, Queen, King)



4 : API Endpoints:
GET /cards – Returns all cards in JSON format.
GET /cards/:id – Returns a specific card by ID. Returns 404 if not found.
POST /cards – Adds a new card to the collection. Validates that suit and value are provided.
DELETE /cards/:id – Deletes a card by ID. Returns 404 if card not found.



5 : Starting the server:

app.listen(PORT, () => {
  console.log(`Card Collection API running at http://localhost:${PORT}`);
});
This starts the server on port 3000 and allows clients to connect and interact with the API.




Key Concepts Learned : 

How to set up an Express.js server.
How to handle different HTTP methods (GET, POST, DELETE).
How to work with JSON data for requests and responses.
How to manage data in-memory using arrays.
How to return proper HTTP status codes and messages.



Example API Usage :

1 : Add a new card (POST /cards) : { "suit": "Hearts", "value": "Ace" }
Response:{ "id": 1, "suit": "Hearts", "value": "Ace" }


2 : Get all cards (GET /cards) : 
Response:
[
  { "id": 1, "suit": "Hearts", "value": "Ace" }
]


3 : Get a card by ID (GET /cards/1)
Response:{ "id": 1, "suit": "Hearts", "value": "Ace" }


4 : Delete a card by ID (DELETE /cards/1)
Response:{ "message": "Card deleted", "card": { "id": 1, "suit": "Hearts", "value": "Ace" } }
