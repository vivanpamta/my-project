JavaScript:

1: const svg = document.getElementById('drawing-area');
We first take the svg element the white box where we draw and save it in a variable called svg.This lets
us add lines and shapes inside that box using JavaScript.

2: let drawing = false;
let currentPath;
drawing = false : means right now I am not drawing.CurrentPath is empty at the start but when we press the mouse
it will store the line we are currently making.


3: svg.addEventListener('mousedown', function(e) {
    drawing = true;
    const pt = getMousePosition(e, svg);
    currentPath = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');
    currentPath.setAttribute('points', `${pt.x},${pt.y}`);
    currentPath.setAttribute('fill', 'none');
    currentPath.setAttribute('stroke', 'deepskyblue');
    currentPath.setAttribute('stroke-width', '2');
    svg.appendChild(currentPath);
});
When we press the mouse button mousedown :
The program understands that the user wants to start drawing.It gets the mouse position inside the SVG
not the whole page only the SVG box.Then it creates a new shape called <polyline> a line made up of points.
The first point of this polyline is set to the mouse position.Style is applied no fill stroke colorn is sky blue
and stroke-width is 2.This polyline is then added inside the SVG.


4: svg.addEventListener('mousemove', function(e) {
    if (!drawing) return;
    const pt = getMousePosition(e, svg);
    let points = currentPath.getAttribute('points');
    points += ` ${pt.x},${pt.y}`;
    currentPath.setAttribute('points', points);
});
When we move the mouse mousemove if the mouse button is still pressed (drawing = true) then every new position of 
the mouse is added to the polyline points.This keeps extending the line as you drag the mouse.Its like connecting 
dots one after another to form a freehand drawing.




5: svg.addEventListener('mouseup', function(e) {
    drawing = false;
});
When we move the mouse if the mouse button is still pressed drawing = true then every new position of the mouse
is added to the polyline points.This keeps extending the line as you drag the mouse.


6: svg.addEventListener('mouseleave', function(e) {
    drawing = false;
});
When the mouse goes outside the SVG mouseleaveAgain drawing is set to false so that drawing automatically stops
when you leave the box.


7: function getMousePosition(evt, svgElement) {
    const rect = svgElement.getBoundingClientRect();
    return {
        x: evt.clientX - rect.left,
        y: evt.clientY - rect.top
    };
}
Finding the mouse position getMousePosition : Normally the mouse position is given relative to the whole page.
But we only want its position inside the SVG box.This function calculates the correct X and Y coordinates inside
the SVG by subtracting the boxs top and left positions.
