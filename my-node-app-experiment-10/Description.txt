Description of the Code :

1 : Importing the readline module:The readline module is used to interact with the user via the command line. 
It allows the program to take input and display output in real-time.


2 : Creating the readline interface:This interface connects Node.js standard input (process.stdin) and output
(process.stdout) to capture user input and show messages.


3 : Storing employee data in an array:Employees are stored as objects in an array, with each object containing
id and name.


4 : Displaying the menu:The showMenu function prints the options for the user to choose from:
Add Employee
List Employees
Remove Employee by ID
Exit
It then waits for user input to select an option.


5 : Handling menu selection:The handleMenu function checks the userâ€™s choice using a switch statement and calls
 the appropriate function (addEmployee, listEmployees, removeEmployee) or exits the program.


6 : Adding an employee:The program asks for the employee ID and name.Creates an object {id, name} and adds it to 
the employees array.Displays confirmation and returns to the menu.



7 : Listing employees:The program checks if the array is empty.If not empty, it lists all employees with their 
index ID, and name.Returns to the menu after displaying the list.



8 : Removing an employee:The program asks for the employee ID to remove.Searches the array for the matching
employee using findIndex.If found, removes the employee with splice and confirms removal.If not found, displays 
a message and returns to the menu.


9 : Exiting the program:When the user selects the exit option, the readline interface is closed and the
program ends.



Key Concepts Learned : 

How to take input from users in Node.js CLI using readline.
How to store and manipulate data in arrays (add, delete, list).
How to create a menu-driven application using functions and switch-case statements.
How to structure a Node.js CLI project in a single file.


Example Run :
Employee Management System =====
1. Add Employee
2. List Employees
3. Remove Employee by ID
4. Exit
Choose an option: 1
Enter Employee ID: 101
Enter Employee Name: Vivan
Employee Added: ID=101, Name=Vivan

 Employee Management System =====
1. Add Employee
2. List Employees
3. Remove Employee by ID
4. Exit
Choose an option: 2
 Employee List 
1. ID: 101, Name: Vivan
